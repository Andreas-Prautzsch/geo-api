services:
  app:
    build:
      context: .
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - OSRM_BASE_URL=${OSRM_BASE_URL:-http://osrm:5000}
      - GEOCODER_BASE_URL=${GEOCODER_BASE_URL:-http://photon:2322}
    depends_on:
      db:
        condition: service_healthy
      osrm:
        condition: service_healthy
      photon:
        condition: service_healthy
    ports:
      - 3002:3002
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3002/ || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 20s
    networks:
      - backend-network

  db:
    image: postgres:13
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - pgdata:/var/lib/postgresql/data:Z
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend-network
  osrm:
    build:
      context: ./docker/osrm
    environment:
      - OSRM_PBF_URL=${OSRM_PBF_URL:-https://download.geofabrik.de/europe/germany-latest.osm.pbf}
      - OSRM_PBF_FILE=${OSRM_PBF_FILE:-germany-latest.osm.pbf}
      - OSRM_ALGORITHM=${OSRM_ALGORITHM:-mld}
      - OSRM_PROFILE=${OSRM_PROFILE:-/opt/car.lua}
    volumes:
      - ./data/osrm:/data
    ports:
      - 5000:5000
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:5000/health || exit 1"]
      interval: 30s
      timeout: 15s
      retries: 20
      start_period: 600s
    networks:
      - backend-network
  photon:
    build:
      context: ./docker/photon
    environment:
      - PHOTON_PBF_URL=${PHOTON_PBF_URL:-https://download.geofabrik.de/europe/germany-latest.osm.pbf}
      - PHOTON_PBF_FILE=${PHOTON_PBF_FILE:-germany-latest.osm.pbf}
      - PHOTON_FORCE_REIMPORT=${PHOTON_FORCE_REIMPORT:-false}
      - JAVA_OPTS=${PHOTON_JAVA_OPTS:-}
    volumes:
      - ./data/photon:/data
    ports:
      - 2322:2322
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:2322/ || exit 1"]
      interval: 30s
      timeout: 15s
      retries: 20
      start_period: 600s
    networks:
      - backend-network

volumes:
  pgdata:

networks:
  backend-network:
    driver: bridge
